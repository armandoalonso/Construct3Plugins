@@START activated|enable
@@ACE
{
  "id": "activated",
  "expressionName": "Activated",
  "scriptName": "Activated",
  "highlight": false,
  "returnType": "number",
  "c2id": 0
}
@@LANG
"activated":{
  "description": "The current activated state of behavior.",
  "translated-name": "Activated"
}
@@CODE
Activated()
{
    return (this.enabled) ? 1 : 0;
}
@@END activated

@@START speed|speed
@@ACE
{
  "id": "speed",
  "expressionName": "Speed",
  "scriptName": "Speed",
  "highlight": false,
  "returnType": "number",
  "c2id": 1
}
@@LANG
"speed":{
  "description": "The current object speed, in pixel per second.",
  "translated-name": "Speed"
}
@@CODE
Speed()
{
    return (this.currentSpeed);
}
@@END speed

@@START max-speed|speed
@@ACE
{
  "id": "max-speed",
  "expressionName": "MaxSpeed",
  "scriptName": "MaxSpeed",
  "highlight": false,
  "returnType": "number",
  "c2id": 2
}
@@LANG
"max-speed":{
  "description": "The maximum speed setting, in pixel per second.",
  "translated-name": "MaxSpeed"
}
@@CODE
MaxSpeed()
{
    return (this.moveParams["max"]);
}
@@END max-speed

@@START acceleration|speed
@@ACE
{
  "id": "acceleration",
  "expressionName": "Acc",
  "scriptName": "Acc",
  "highlight": false,
  "returnType": "number",
  "c2id": 3
}
@@LANG
"acceleration":{
  "description": "The acceleration setting, in pixel per second per second.",
  "translated-name": "Acc"
}
@@CODE
Acc()
{
    return (this.moveParams["acc"]);
}
@@END acceleration

@@START deceleration|speed
@@ACE
{
  "id": "deceleration",
  "expressionName": "Dec",
  "scriptName": "Dec",
  "highlight": false,
  "returnType": "number",
  "c2id": 4
}
@@LANG
"deceleration":{
  "description": "The deceleration setting, in pixel per second per second.",
  "translated-name": "Dec"
}
@@CODE
Dec()
{
    return (this.moveParams["dec"]);
}
@@END deceleration

@@START target-x|move-to
@@ACE
{
  "id": "target-x",
  "expressionName": "TargetX",
  "scriptName": "TargetX",
  "highlight": false,
  "returnType": "number",
  "c2id": 5
}
@@LANG
"target-x":{
  "description": "The X co-ordinate of target position to move toward.",
  "translated-name": "TargetX"
}
@@CODE
TargetX()
{
    return (this.target["x"]);
}
@@END target-x

@@START target-y|move-to
@@ACE
{
  "id": "target-y",
  "expressionName": "TargetY",
  "scriptName": "TargetY",
  "highlight": false,
  "returnType": "number",
  "c2id": 6
}
@@LANG
"target-y":{
  "description": "The Y co-ordinate of target position to move toward.",
  "translated-name": "TargetY"
}
@@CODE
TargetY()
{
    return (this.target["y"]);
}
@@END target-y

@@START moving-angle|moving-angle
@@ACE
{
  "id": "moving-angle",
  "expressionName": "MovingAngle",
  "scriptName": "MovingAngle",
  "highlight": false,
  "returnType": "number",
  "c2id": 7
}
@@LANG
"moving-angle":{
  "description": "Get current moving angle, in degree. Retrun last moving angle when object is not moving.",
  "translated-name": "MovingAngle"
}
@@CODE
MovingAngle()
{
    return (this.getMovingAngle());
}
@@END moving-angle

@@START moving-angle-start|moving-angle
@@ACE
{
  "id": "moving-angle-start",
  "expressionName": "MovingAngleStart",
  "scriptName": "MovingAngleStart",
  "highlight": false,
  "returnType": "number",
  "c2id": 8
}
@@LANG
"moving-angle-start":{
  "description": "Get moving angle from start position to target position, in degree.",
  "translated-name": "MovingAngleStart"
}
@@CODE
MovingAngleStart()
{
    return (this.movingAngleStartData["a"]);
}
@@END moving-angle-start

